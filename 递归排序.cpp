//排序思想：
//1.初始时，将每个记录堪称一个单独的有序序列，则n个待排序记录就是n个长度为1的有序子数列
//2.对所有有序子序列进行两两归并，得到二分之n个长度为二或一的有序子序列，一趟归并
//3.重复2。，直到得到长度为n的有序序列为止，

//上述排序过程中，子序列总是两两归并，成为2-路归并排序
//其核心是如何将相邻的两个子序列归并成一个子序列

//迭代方式
//合称为结构化处理方式



///////////////////////
//多关键字排序//
///////////////////////
//高位关键字有限？？？
//低位有限？？
//链式基数排序
//链表初始化时间复杂度：O（r）
//分配的时间复杂度O(n)
//

//第十章//
//希尔排序

// 快速排序 最快 
// 归并排序 
// 简单排序，直接插入
// 高级：归并，以比较为基础

// 第九张
// 查找
// 静态查找表
// 顺序查找法 监督少的作用
// 给定n个元素，如何比较
// 能够计算平均查找长度
// 分成功不成功
// 二叉排序树的特征，给一个空树，一个一个节点插入，做出二叉排序树

// hash函数

// 第七章
// 图
// 邻接矩阵 邻接表
// 深度优先 广度优先
// 最小生成树
// 普利姆算法
// 克罗斯卡尔算法

// 拓扑排序
// 找关键路径
// 边表示活动 活动最早开始和最晚开始
// 活动是以来于事件的应用题，综合体

// 树的基本概念
// 二叉树的性质
// 都有用
// 1.每一层最多多少？
// 2.三叉树？？？
// 3.总树
// 4.左右孩子的关系
// 完全二叉树
// 有多少二叉节点
// 有多少只有左子树，最多一个
// 叶子节点又多少个
// 最后一个非根节点？？

// 二叉树的遍历
// 如何构造二叉树
// 三种遍历
// 先中后
// 层次遍历
// 非递归遍历了解即可
// 统计叶子节点个数
// 费根节点个数
// 树的宽度 每一层的节点个数（层次遍历很方便）
// 用队列的方式，根部为空放入

// 树的其他相关运算
// 队列啥的
// 二叉树与树的关系
// 二叉树对应的是森林

// 遍历 树 两种遍历
// 森林也是两种遍历
// 哈夫曼编码

// 第五章
// 数组与广义表
// 随机访问结构的元素定义问题
// 广义表是线性表的推广
// get head 
// get tail
// 去找某个元素
// 表可能是两层的

// 字符串kmp算法可以不看
// 处理函数
// 三种存储
// 定长


// 第四章
// 串的基本知识

// 第三章
// 栈
// 站的基本操作
// 入栈，出栈
// 顺序栈可能要解决溢出
// 双端栈
// 把两个栈合并成一个
// 链栈
// 队列是一个先进先出结构
// 重点是循环队列
// 链队列不考了

// 第二章

// 最为重要
// 线性表
// 实现的两种方式
// 顺序表的各种基本操作
// 分析

// 链表
// 创建链表
// 头插入，尾插入